(function (factory) {
  typeof define === 'function' && define.amd ? define(factory) :
  factory();
}(function () { 'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(source, true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(source).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  var n,u,t,i,r,o,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var t,i,r,o,f=arguments;if(l=s({},l),arguments.length>3)for(u=[u],t=3;t<arguments.length;t++)u.push(f[t]);if(null!=u&&(l.children=u),null!=n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===l[i]&&(l[i]=n.defaultProps[i]);return o=l.key,null!=(r=l.ref)&&delete l.ref,null!=o&&delete l.key,v(n,l,o,r)}function v(l,u,t,i){var r={type:l,props:u,key:t,ref:i,__k:null,__p:null,__b:0,__e:null,l:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(r),r}function y(n){return n.children}function d(n){if(null==n||"boolean"==typeof n)return null;if("string"==typeof n||"number"==typeof n)return v(null,n,null,null);if(null!=n.__e||null!=n.__c){var l=v(n.type,n.props,n.key,null);return l.__e=n.__e,l}return n}function m(n,l){this.props=n,this.context=l;}function w(n,l){if(null==l)return n.__p?w(n.__p,n.__p.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return "function"==typeof n.type?w(n):null}function g(n){var l,u;if(null!=(n=n.__p)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return g(n)}}function k(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&(i=n.debounceRendering,(n.debounceRendering||t)(_));}function _(){var n;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();)n.__d&&n.forceUpdate(!1);}function b(n,l,u,t,i,r,o,c,s){var h,v,p,y,d,m,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=r?r[0]:_?w(u,0):null),h=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__p=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type)k[h]=void 0;else for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null;}if(y=$(n,u,p=p||f,t,i,r,o,null,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[])).push(v,u.__c||y,u),null!=y){if(null==m&&(m=y),null!=u.l)y=u.l,u.l=null;else if(r==p||y!=c||null==y.parentNode){n:if(null==c||c.parentNode!==n)n.appendChild(y);else{for(d=c,v=0;(d=d.nextSibling)&&v<_;v+=2)if(d==y)break n;n.insertBefore(y,c);}"option"==l.type&&(n.value="");}c=y.nextSibling,"function"==typeof l.type&&(l.l=y);}}return h++,u}),l.__e=m,null!=r&&"function"!=typeof l.type)for(h=r.length;h--;)null!=r[h]&&a(r[h]);for(h=_;h--;)null!=k[h]&&D(k[h],k[h]);if(g)for(h=0;h<g.length;h++)A(g[h],g[++h],g[++h]);}function x(n,l,u){if(null==u&&(u=[]),null==n||"boolean"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var t=0;t<n.length;t++)x(n[t],l,u);else u.push(l?l(d(n)):n);return u}function C(n,l,u,t,i){var r;for(r in u)r in l||N(n,r,null,u[r],t);for(r in l)i&&"function"!=typeof l[r]||"value"===r||"checked"===r||u[r]===l[r]||N(n,r,l[r],u[r],t);}function P(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]="number"==typeof u&&!1===c.test(l)?u+"px":u||"";}function N(n,l,u,t,i){var r,o,f,e,c;if("key"===(l=i?"className"===l?"class":l:"class"===l?"className":l)||"children"===l);else if("style"===l)if(r=n.style,"string"==typeof u)r.cssText=u;else{if("string"==typeof t&&(r.cssText="",t=null),t)for(o in t)u&&o in u||P(r,o,"");if(u)for(f in u)t&&u[f]===t[f]||P(r,f,u[f]);}else"o"===l[0]&&"n"===l[1]?(e=l!==(l=l.replace(/Capture$/,"")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,T,e),(n.u||(n.u={}))[l]=u):n.removeEventListener(l,T,e)):"list"!==l&&"tagName"!==l&&"form"!==l&&!i&&l in n?n[l]=null==u?"":u:"function"!=typeof u&&"dangerouslySetInnerHTML"!==l&&(l!==(l=l.replace(/^xlink:?/,""))?null==u||!1===u?n.removeAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase()):n.setAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u));}function T(l){return this.u[l.type](n.event?n.event(l):l)}function $(l,u,t,i,r,o,f,e,c,a){var h,v,p,d,w,g,k,_,x,C,P=u.type;if(void 0!==u.constructor)return null;(h=n.__b)&&h(u);try{n:if("function"==typeof P){if(_=u.props,x=(h=P.contextType)&&i[h.__c],C=h?x?x.props.value:h.__p:i,t.__c?k=(v=u.__c=t.__c).__p=v.__E:("prototype"in P&&P.prototype.render?u.__c=v=new P(_,C):(u.__c=v=new m(_,C),v.constructor=P,v.render=H),x&&x.sub(v),v.props=_,v.state||(v.state={}),v.context=C,v.__n=i,p=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&s(v.__s==v.state?v.__s=s({},v.__s):v.__s,P.getDerivedStateFromProps(_,v.__s)),p)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&f.push(v);else{if(null==P.getDerivedStateFromProps&&null==e&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(_,C),!e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(_,v.__s,C)){for(v.props=_,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=null!=c?c!==t.__e?c:t.__e:null,u.__k=t.__k,h=0;h<u.__k.length;h++)u.__k[h]&&(u.__k[h].__p=u);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(_,v.__s,C);}for(d=v.props,w=v.state,v.context=C,v.props=_,v.state=v.__s,(h=n.__r)&&h(u),v.__d=!1,v.__v=u,v.__P=l,h=v.render(v.props,v.state,v.context),u.__k=null!=h&&h.type==y&&null==h.key?h.props.children:h,null!=v.getChildContext&&(i=s(s({},i),v.getChildContext())),p||null==v.getSnapshotBeforeUpdate||(g=v.getSnapshotBeforeUpdate(d,w)),b(l,u,t,i,r,o,f,c,a),v.base=u.__e;h=v.__h.pop();)v.__s&&(v.state=v.__s),h.call(v);p||null==d||null==v.componentDidUpdate||v.componentDidUpdate(d,w,g),k&&(v.__E=v.__p=null);}else u.__e=z(t.__e,u,t,i,r,o,f,a);(h=n.diffed)&&h(u);}catch(l){n.__e(l,u,t);}return u.__e}function j(l,u){for(var t;t=l.pop();)try{t.componentDidMount();}catch(l){n.__e(l,t.__v);}n.__c&&n.__c(u);}function z(n,l,u,t,i,r,o,c){var s,a,h,v,p=u.props,y=l.props;if(i="svg"===l.type||i,null==n&&null!=r)for(s=0;s<r.length;s++)if(null!=(a=r[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,r[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(y);n=i?document.createElementNS("http://www.w3.org/2000/svg",l.type):document.createElement(l.type),r=null;}return null===l.type?p!==y&&(null!=r&&(r[r.indexOf(n)]=null),n.data=y):l!==u&&(null!=r&&(r=e.slice.call(n.childNodes)),h=(p=u.props||f).dangerouslySetInnerHTML,v=y.dangerouslySetInnerHTML,c||(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||"")),C(n,y,p,i,c),l.__k=l.props.children,v||b(n,l,u,t,"foreignObject"!==l.type&&i,r,o,f,c),c||("value"in y&&void 0!==y.value&&y.value!==n.value&&(n.value=null==y.value?"":y.value),"checked"in y&&void 0!==y.checked&&y.checked!==n.checked&&(n.checked=y.checked))),n}function A(l,u,t){try{"function"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,t);}}function D(l,u,t){var i,r,o;if(n.unmount&&n.unmount(l),(i=l.ref)&&A(i,null,u),t||"function"==typeof l.type||(t=null!=(r=l.__e)),l.__e=l.l=null,null!=(i=l.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount();}catch(l){n.__e(l,u);}i.base=i.__P=null;}if(i=l.__k)for(o=0;o<i.length;o++)i[o]&&D(i[o],u,t);null!=r&&a(r);}function H(n,l,u){return this.constructor(n,u)}function I(l,u,t){var i,o,c;n.__p&&n.__p(l,u),o=(i=t===r)?null:t&&t.__k||u.__k,l=h(y,null,[l]),c=[],$(u,i?u.__k=l:(t||u).__k=l,o||f,f,void 0!==u.ownerSVGElement,t&&!i?[t]:o?null:e.slice.call(u.childNodes),c,!1,t||f,i),j(c,l);}n={},m.prototype.setState=function(n,l){var u=this.__s!==this.state&&this.__s||(this.__s=s({},this.state));("function"!=typeof n||(n=n(u,this.props)))&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this));},m.prototype.forceUpdate=function(n){var l,u,t,i=this.__v,r=this.__v.__e,o=this.__P;o&&(l=!1!==n,u=[],t=$(o,i,s({},i),this.__n,void 0!==o.ownerSVGElement,null,u,l,null==r?w(i):r),j(u,i),t!=r&&g(i)),n&&n();},m.prototype.render=y,u=[],t="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,i=n.debounceRendering,n.__e=function(n,l,u){for(var t;l=l.__p;)if((t=l.__c)&&!t.__p)try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError)t.setState(t.constructor.getDerivedStateFromError(n));else{if(null==t.componentDidCatch)continue;t.componentDidCatch(n);}return k(t.__E=t)}catch(l){n=l;}throw n},r=f,o=0;

  // (int) The current year
  var THIS_YEAR = new Date().getFullYear(); // (int) The current month starting from 1 - 12
  // 1 => January, 12 => December
  // getMonth() is zero-based value: Jan is 0, Dec is 11. so we plus '1'- Jan is 1, Dec is 12

  var THIS_MONTH = new Date().getMonth() + 1; // Week days names and shortnames

  var WEEK_DAYS = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]; // Calendar months names and shortnames

  var CALENDAR_MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; // Weeks displayed on calendar

  var CALENDAR_WEEKS = 5; // Pads a string value with leading zeroes(0) until length is reached
  // For example: zeroPad(5, 2) => "05"

  var zeroPad = function zeroPad(value, length) {
    return "".concat(value).padStart(length, "0");
  }; // (int) Number days in a month for a given year from 28 - 31

  var getNumOfDaysInGivenMonth = function getNumOfDaysInGivenMonth() {
    var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : THIS_MONTH;
    var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THIS_YEAR;
    var months30 = [4, 6, 9, 11];
    var leapYear = year % 4 === 0; // eslint-disable-next-line no-nested-ternary

    return month === 2 ? leapYear ? 29 : 28 : months30.includes(month) ? 30 : 31;
  }; // (int) First day of the month for a given year from 1 - 7
  // 1 => Sunday, 7 => Saturday
  // getDay() is zero-based value: Sun is 0, Sat is 6. so we plus '1'- Sun is 1, Sat is 7

  var getFirstDayOfTheMonth = function getFirstDayOfTheMonth() {
    var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : THIS_MONTH;
    var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THIS_YEAR;
    return new Date("".concat(year, "-").concat(zeroPad(month, 2), "-01")).getDay() + 1;
  }; // (bool) Checks if a value is a date - this is just a simple check

  var isDate = function isDate(date) {
    var isDateObj = Object.prototype.toString.call(date) === "[object Date]";
    var isValidDate = date && !Number.isNaN(date.valueOf());
    return isDateObj && isValidDate;
  }; // (bool) Checks if two date values are of the same month and year

  var isSameMonth = function isSameMonth(date) {
    var basedate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();
    if (!(isDate(date) && isDate(basedate))) return false;
    var basedateMonth = basedate.getMonth() + 1;
    var basedateYear = basedate.getFullYear();
    var dateMonth = date.getMonth() + 1;
    var dateYear = date.getFullYear();
    return basedateMonth === dateMonth && basedateYear === dateYear;
  }; // (bool) Checks if two date values are the same day

  var isSameDay = function isSameDay(date, basedate) {
    if (!(isDate(date) && isDate(basedate))) throw new Error("Value was not a Date object");
    var basedateDate = basedate.getDate();
    var basedateMonth = basedate.getMonth() + 1;
    var basedateYear = basedate.getFullYear();
    var dateDate = date.getDate();
    var dateMonth = date.getMonth() + 1;
    var dateYear = date.getFullYear();
    return basedateDate === dateDate && basedateMonth === dateMonth && basedateYear === dateYear;
  }; // (string) Formats the given date as YYYY-MM-DD
  // Months and Days are zero padded

  var getDateISO = function getDateISO() {
    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
    if (!isDate(date)) throw new Error("Invalid date format. Please follow 'ISO 8601' format; 2013-08-30");
    return [date.getFullYear(), zeroPad(date.getMonth() + 1, 2), zeroPad(date.getDate(), 2)].join("-");
  }; // ({month, year}) Gets the month and year before the given month and year
  // For example: getPreviousMonth(1, 2000) => {month: 12, year: 1999}
  // while: getPreviousMonth(12, 2000) => {month: 11, year: 2000}

  var getPreviousMonth = function getPreviousMonth(month, year) {
    var prevMonth = month > 1 ? month - 1 : 12;
    var prevMonthYear = month > 1 ? year : year - 1;
    return {
      month: prevMonth,
      year: prevMonthYear
    };
  }; // ({month, year}) Gets the month and year after the given month and year
  // For example: getNextMonth(1, 2000) => {month: 2, year: 2000}
  // while: getNextMonth(12, 2000) => {month: 1, year: 2001}

  var getNextMonth = function getNextMonth(month, year) {
    var nextMonth = month < 12 ? month + 1 : 1;
    var nextMonthYear = month < 12 ? year : year + 1;
    return {
      month: nextMonth,
      year: nextMonthYear
    };
  };
  /**
   *  CALENDAR BUILDER
   *  For a month in the specified year.
   *  Returns an array of the calendar dates.
   *  Each calendar date is represented as an array => [YYYY, MM, DD]
   */

  var calendar = (function () {
    var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : THIS_MONTH;
    var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : THIS_YEAR;
    // Get number of days in the month and the month's first day
    var monthDays = getNumOfDaysInGivenMonth(month, year);
    var monthFirstDay = getFirstDayOfTheMonth(month, year); // Get number of days to be displayed from previous and next months
    // These ensure a total of 42 days (6 weeks) displayed on the calendar

    var daysFromPrevMonth = monthFirstDay - 1;
    var totalThisAndPrevMonthDays = daysFromPrevMonth + monthDays;
    var fiveWeeks = CALENDAR_WEEKS * 7 - totalThisAndPrevMonthDays;
    var sixWeeks = (CALENDAR_WEEKS + 1) * 7 - totalThisAndPrevMonthDays; // if 'fiveWeeks' is -ve, means we need an additional row for the rest of the dates

    var daysFromNextMonth = fiveWeeks < 0 ? sixWeeks : fiveWeeks; // Get the previous and next months and years

    var _getPreviousMonth = getPreviousMonth(month, year),
        prevMonth = _getPreviousMonth.month,
        prevMonthYear = _getPreviousMonth.year;

    var _getNextMonth = getNextMonth(month, year),
        nextMonth = _getNextMonth.month,
        nextMonthYear = _getNextMonth.year; // Get number of days in previous month


    var prevMonthDays = getNumOfDaysInGivenMonth(prevMonth, prevMonthYear); // Builds dates to be displayed from previous month

    var prevMonthDates = _toConsumableArray(new Array(daysFromPrevMonth)).map(function (n, index) {
      var day = index + 1 + (prevMonthDays - daysFromPrevMonth);
      return [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];
    }); // Builds dates to be displayed from current month


    var thisMonthDates = _toConsumableArray(new Array(monthDays)).map(function (n, index) {
      return [year, zeroPad(month, 2), zeroPad(index + 1, 2)];
    }); // Builds dates to be displayed from next month


    var nextMonthDates = _toConsumableArray(new Array(daysFromNextMonth)).map(function (n, index) {
      return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(index + 1, 2)];
    }); // Combines all dates from previous, current and next months


    return [].concat(_toConsumableArray(prevMonthDates), _toConsumableArray(thisMonthDates), _toConsumableArray(nextMonthDates));
  });

  var Calendar =
  /*#__PURE__*/
  function (_Component) {
    _inherits(Calendar, _Component);

    function Calendar(props) {
      var _this;

      _classCallCheck(this, Calendar);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));

      _defineProperty(_assertThisInitialized(_this), "resolveStateFromDate", function (date) {
        var d = isDate(date) ? date : new Date();
        return {
          current: d,
          month: d.getMonth() + 1,
          year: d.getFullYear()
        };
      });

      _defineProperty(_assertThisInitialized(_this), "getCalendarDates", function () {
        var _this$state = _this.state,
            current = _this$state.current,
            month = _this$state.month,
            year = _this$state.year;
        var calendarMonth = month || current.getMonth() + 1;
        var calendarYear = year || current.getFullYear();
        return calendar(calendarMonth, calendarYear);
      });

      _defineProperty(_assertThisInitialized(_this), "renderMonthAndYear", function () {
        var _this$state2 = _this.state,
            month = _this$state2.month,
            year = _this$state2.year; // Resolve the month name from the CALENDAR_MONTHS object map

        var monthname = CALENDAR_MONTHS[month - 1];
        return h("div", {
          "class": "monthPicker"
        }, h("button", {
          type: "button",
          "class": "prevMonth",
          onMouseDown: _this.handlePrevious,
          onMouseUp: _this.clearPressureTimer,
          title: "Previous Month"
        }, h("span", {
          "class": "monthArrow"
        }, "\u2190")), h("div", {
          "class": "monthYearLabel"
        }, monthname.toUpperCase(), " ", year), h("button", {
          type: "button",
          "class": "nextMonth",
          onMouseDown: _this.handleNext,
          onMouseUp: _this.clearPressureTimer,
          title: "Next Month"
        }, h("span", {
          "class": "monthArrow"
        }, "\u2192")));
      });

      _defineProperty(_assertThisInitialized(_this), "renderDayLabels", function () {
        // Resolve the day of the week label from the WEEK_DAYS object map
        // const daylabel = WEEK_DAYS[day].toUpperCase();
        return h("div", {
          "class": "dayLabels"
        }, WEEK_DAYS.map(function (day) {
          return h("div", {
            "class": "dayLabel"
          }, day[0]);
        }));
      });

      _defineProperty(_assertThisInitialized(_this), "renderCalendarDate", function () {
        return h("div", {
          role: "presentation",
          "class": "dateLabels",
          onMouseDown: _this.gotoDate
        }, calendar(_this.state.month, _this.state.year).map(function (d, index) {
          var _this$state3 = _this.state,
              current = _this$state3.current,
              month = _this$state3.month,
              year = _this$state3.year,
              today = _this$state3.today;
          var dateStr = d.join("-");
          var date = new Date(dateStr); // Check if calendar date is same day as today

          var isToday = isSameDay(date, today); // Check if calendar date is same day as currently selected date

          var isCurrent = isSameDay(date, current); // Check if calendar date is in the same month as the state month and year

          var inMonth = isSameMonth(date, new Date("".concat(year, "-").concat(month, "-01")));
          return h("div", {
            // eslint-disable-next-line react/no-array-index-key
            key: "".concat(year, "-").concat(month, "-").concat(index),
            "data-date": dateStr,
            "class": [!inMonth && "notInMonth", isCurrent && "currentDay", isToday && "today", "dateLabel"].filter(Boolean).join(" ")
          }, date.getDate());
        }));
      });

      _defineProperty(_assertThisInitialized(_this), "gotoDate", function (e) {
        var date = new Date(e.target.dataset.date);
        var onDateChanged = _this.props.onDateChanged;

        _this.setState(_this.resolveStateFromDate(date));

        typeof onDateChanged === "function" && onDateChanged(date);
      });

      _defineProperty(_assertThisInitialized(_this), "gotoPreviousMonth", function () {
        return _this.setState(function (prevState) {
          return getPreviousMonth(prevState.month, prevState.year);
        });
      });

      _defineProperty(_assertThisInitialized(_this), "gotoNextMonth", function () {
        return _this.setState(function (prevState) {
          return getNextMonth(prevState.month, prevState.year);
        });
      });

      _defineProperty(_assertThisInitialized(_this), "gotoPreviousYear", function () {
        return _this.setState(function (prevState) {
          return {
            year: prevState.year - 1
          };
        });
      });

      _defineProperty(_assertThisInitialized(_this), "gotoNextYear", function () {
        return _this.setState(function (prevState) {
          return {
            year: prevState.year + 1
          };
        });
      });

      _defineProperty(_assertThisInitialized(_this), "handlePressure", function (fn) {
        if (typeof fn !== "function") return;
        fn();
        _this.pressureTimeout = setTimeout(function () {
          _this.pressureTimer = setInterval(fn, 100);
        }, 500);
      });

      _defineProperty(_assertThisInitialized(_this), "clearPressureTimer", function () {
        _this.pressureTimer && clearInterval(_this.pressureTimer);
        _this.pressureTimeout && clearTimeout(_this.pressureTimeout);
      });

      _defineProperty(_assertThisInitialized(_this), "handlePrevious", function (evt) {
        return _this.handlePressure(evt.shiftKey ? _this.gotoPreviousYear : _this.gotoPreviousMonth);
      });

      _defineProperty(_assertThisInitialized(_this), "handleNext", function (evt) {
        return _this.handlePressure(evt.shiftKey ? _this.gotoNextYear : _this.gotoNextMonth);
      });

      _this.state = _objectSpread2({}, _this.resolveStateFromDate(props.date), {
        today: new Date()
      });
      return _this;
    }

    _createClass(Calendar, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearPressureTimer();
      }
    }, {
      key: "render",
      value: function render() {
        return h("div", {
          "class": "calendar"
        }, this.renderMonthAndYear(), this.renderDayLabels(), this.renderCalendarDate());
      }
    }]);

    return Calendar;
  }(m);

  var Datepicker =
  /*#__PURE__*/
  function (_Component) {
    _inherits(Datepicker, _Component);

    function Datepicker() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, Datepicker);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Datepicker)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _defineProperty(_assertThisInitialized(_this), "state", {
        date: null,
        calendarOpen: false
      });

      _defineProperty(_assertThisInitialized(_this), "toggleCalendar", function () {
        return _this.setState(function (prevState) {
          return {
            calendarOpen: !prevState.calendarOpen
          };
        });
      });

      _defineProperty(_assertThisInitialized(_this), "handleChange", function (evt) {
        return evt.preventDefault();
      });

      _defineProperty(_assertThisInitialized(_this), "handleDateChange", function (date) {
        var _this$props = _this.props,
            onDateChanged = _this$props.onDateChanged,
            name = _this$props.name; // not sure why i needed to do this..

        setTimeout(function () {
          return _this.setState({
            date: getDateISO(date),
            calendarOpen: false
          });
        });
        typeof onDateChanged === "function" && onDateChanged(name, date);
      });

      return _this;
    }

    _createClass(Datepicker, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var date = this.props.value;
        if (!date) return;
        this.setState({
          date: getDateISO(new Date(date))
        });
      }
    }, {
      key: "render",
      value: function render(_ref, _ref2) {
        var label = _ref.label,
            placeholder = _ref.placeholder,
            formatter = _ref.formatter;
        var date = _ref2.date,
            calendarOpen = _ref2.calendarOpen;
        return h("div", {
          "class": "dpd",
          style: "position:relative"
        }, label && h("label", null, label), h("input", {
          type: "text",
          value: formatter ? formatter(date) : date,
          readOnly: "readonly",
          placeholder: placeholder,
          onClick: this.toggleCalendar,
          onBlur: this.toggleCalendar
        }), calendarOpen && h(Calendar, {
          date: date && new Date(date),
          onDateChanged: this.handleDateChange
        }));
      }
    }]);

    return Datepicker;
  }(m);

  var HelloPreact =
  /*#__PURE__*/
  function (_Component) {
    _inherits(HelloPreact, _Component);

    function HelloPreact() {
      _classCallCheck(this, HelloPreact);

      return _possibleConstructorReturn(this, _getPrototypeOf(HelloPreact).apply(this, arguments));
    }

    _createClass(HelloPreact, [{
      key: "render",
      value: function render() {
        return h(Datepicker, {
          label: "haha",
          value: "2019-02-11"
        });
      }
    }]);

    return HelloPreact;
  }(m);

  I(h(HelloPreact, null), document.getElementById("root"));

}));
